---
kind: pipeline
name: react-ci-cd

steps:
  - name: deps
    image: node:alpine
    commands:
      - npm install
  - name: build
    image: node:alpine
    commands:
      - npm run build
  - name: tests
    image: node:alpine
    commands:
      - npm run test
  - name: prerelease
    image: alpine
    commands:
      - tar -zcvf build.tar.gz build/
  - name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - build.tar.gz
    when:
      event: tag
  - name: notify
    image: plugins/slack
    settings:
      username: Drone
      icon_url: https://avatars0.githubusercontent.com/u/2181346?s=400&v=4
      channel: react-ci-cd-jdflament
      webhook:
        from_secret: slack_webhook
      template: >
        {{#if build.pull }}
          *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
        {{else}}
          *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
        {{/if}}
        Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
        Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
        Author: {{ build.author }}
        <{{ build.link }}|Visit build page ↗>
    when:
      status: [ success, failure ]
